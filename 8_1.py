def add_everything_up(a, b):
    """
    Складывает два значения a и b. Если они разных типов (например, число и строка),
    возвращает их строковое представление в том же порядке.
    Если результат сложения является числом (float), то выводит его с округлением до 3 знаков после запятой.
    Иначе возвращает результат сложения или конкатенации в зависимости от типов.

    :param a: int, float или str
    :param b: int, float или str
    :return: int, float, str в зависимости от типов входных данных
    """
    try:
        # Пробуем сложить два значения стандартным способом
        result = a + b

        # Если результат сложения является числом с плавающей точкой (float),
        # округляем его до 3 знаков после запятой и возвращаем
        if isinstance(result, float):
            return round(result, 3)
        else:
            # Если результат не является float, то возвращаем его как есть
            return result

    except TypeError:
        # Если типы a и b разные (например, число и строка), возникает ошибка TypeError.
        # В этом случае преобразуем их в строки и возвращаем их конкатенацию.
        return str(a) + str(b)

# Пример использования функции:
# 1. Сложение числа и строки (разные типы) - результат: конкатенация строк
print(add_everything_up(123.456, 'строка'))  # Вывод: "123.456строка"

# 2. Сложение строки и числа (разные типы) - результат: конкатенация строк
print(add_everything_up('яблоко', 4215))  # Вывод: "яблоко4215"

# 3. Сложение двух чисел (одинаковые типы) - результат: стандартное сложение
# Здесь результат будет float, и его нужно округлить до 3 знаков после запятой
print(add_everything_up(123.456, 7))  # Вывод: 130.456

# 4. Сложение двух строк (одинаковые типы) - результат: стандартная конкатенация
print(add_everything_up('Python', '3.10'))  # Вывод: "Python3.10"

